{"version":3,"file":"static/js/870.0904deb1.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/AuthForm/FormSection/FormSection.module.scss?1947","components/AuthForm/FormSection/FormSection.jsx","helpers/Notification/Notification.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","webpack://react-homework-template/./src/components/AuthForm/AuthForm.module.scss?60aa"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"orangeColor\":\"#f59256\",\"mainTextColor\":\"#111\",\"backgroundColor\":\"#fdf7f2\",\"prymaryTextColor\":\"#000\",\"activeInputColor\":\"#fdf7f2\",\"errorColor\":\"#d60202\",\"secondaryTextColor\":\"#fff\",\"hoverOrangeColor\":\"#e7884d\",\"primaryGrayColor\":\"rgba(17,17,17,.6)\",\"secondGrayColor\":\"#535353\",\"background\":\"FormSection_background__Fea63\"};","import styles from './FormSection.module.scss';\n\nconst FormSection = ({ children }) => {\n  return <div className={styles.background}>{children}</div>;\n};\n\nexport default FormSection;\n","import { toast } from 'react-toastify';\n\nconst showError = text => toast.error(text);\n\nconst showSuccess = text => toast.success(text);\n\nconst showWarning = text => toast.warn(text);\n\nconst notices = {\n  showError,\n  showSuccess,\n  showWarning,\n};\nexport default notices;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form } from 'formik';\nimport { IconContext } from 'react-icons';\nimport { FiEyeOff, FiEye } from 'react-icons/fi';\nimport { Dna } from 'react-loader-spinner';\nimport * as Yup from 'yup';\nimport { useTranslation } from 'react-i18next';\n\nimport { authOperations } from 'redux/auth';\nimport styles from 'components/AuthForm/AuthForm.module.scss';\nimport notices from 'helpers/Notification';\n\nconst LoginForm = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email('auth.invalidEmail')\n      .required('auth.requiredValue'),\n    password: Yup.string()\n      .matches(/^\\S*$/, 'auth.notWhitespace')\n      .min(7, 'auth.passwordShort')\n      .max(32, 'auth.passwordLong')\n      .required('auth.requiredValue'),\n  });\n\n  const handleLogin = formValue => {\n    const { email, password } = formValue;\n    setLoading(true);\n\n    dispatch(authOperations.logIn({ email, password }))\n      .unwrap()\n      .catch(err => {\n        setLoading(false);\n        notices.showError(err?.message);\n      });\n  };\n\n  return (\n    <div className={styles.formWrap}>\n      <h1 className={styles.title}> {t('auth.login')}</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleLogin}\n      >\n        {({ errors, touched }) => (\n          <Form className={styles.form}>\n            <label className={styles.formGroup}>\n              <Field\n                type=\"email\"\n                name=\"email\"\n                className={styles.input}\n                placeholder={t('auth.emailPlaceholder')}\n              />\n              {errors.email && touched.email && (\n                <div className={styles.errorMsg}>{t(errors.email)}</div>\n              )}\n            </label>\n            <label className={styles.formGroup}>\n              <Field\n                type={show ? 'text' : 'password'}\n                name=\"password\"\n                className={styles.input}\n                placeholder={t('auth.passwordPlaceholder')}\n              />\n              <span className={styles.icon} onClick={() => setShow(!show)}>\n                {show && (\n                  <IconContext.Provider\n                    value={{ style: { verticalAlign: 'middle' } }}\n                  >\n                    <FiEye />\n                  </IconContext.Provider>\n                )}\n                {!show && (\n                  <IconContext.Provider\n                    value={{ style: { verticalAlign: 'middle' } }}\n                  >\n                    <FiEyeOff />\n                  </IconContext.Provider>\n                )}\n              </span>\n              {errors.password && touched.password && (\n                <div className={styles.errorMsg}>{t(errors.password)}</div>\n              )}\n            </label>\n            <div>\n              <button\n                type=\"submit\"\n                className={styles.button}\n                disabled={loading}\n              >\n                {loading ? (\n                  <Dna\n                    visible={true}\n                    height=\"40\"\n                    width=\"80\"\n                    ariaLabel=\"dna-loading\"\n                    wrapperClass=\"dna-wrapper\"\n                    wrapperStyle={{ verticalAlign: 'middle' }}\n                  />\n                ) : (\n                  t('auth.login')\n                )}\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n      <p className={styles.textHint}>\n        {t('auth.loginHint')}\n        <Link className={styles.link} to=\"/register\">\n          {t('auth.register')}\n        </Link>\n      </p>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm';\nimport FormSection from 'components/AuthForm/FormSection';\nimport Container from 'components/Container/Container';\n\nconst LoginPage = () => {\n  return (\n    <main>\n      <FormSection>\n        <Container>\n          <LoginForm />\n        </Container>\n      </FormSection>\n    </main>\n  );\n};\n\nexport default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"orangeColor\":\"#f59256\",\"mainTextColor\":\"#111\",\"backgroundColor\":\"#fdf7f2\",\"prymaryTextColor\":\"#000\",\"activeInputColor\":\"#fdf7f2\",\"errorColor\":\"#d60202\",\"secondaryTextColor\":\"#fff\",\"hoverOrangeColor\":\"#e7884d\",\"primaryGrayColor\":\"rgba(17,17,17,.6)\",\"secondGrayColor\":\"#535353\",\"formWrap\":\"AuthForm_formWrap__i1s5e\",\"title\":\"AuthForm_title__WkPPr\",\"form\":\"AuthForm_form__kV4hH\",\"formGroup\":\"AuthForm_formGroup__FWdnw\",\"input\":\"AuthForm_input__sMieH\",\"icon\":\"AuthForm_icon__Z6Tyz\",\"button\":\"AuthForm_button__B5dfz\",\"backButton\":\"AuthForm_backButton__JGFqa\",\"textHint\":\"AuthForm_textHint__hVame\",\"link\":\"AuthForm_link__xk1HL\",\"errorMsg\":\"AuthForm_errorMsg__JvpxU\"};"],"names":["children","className","styles","notices","showError","text","toast","showSuccess","showWarning","t","useTranslation","dispatch","useDispatch","useState","show","setShow","loading","setLoading","validationSchema","Yup","email","required","password","matches","min","max","initialValues","onSubmit","formValue","authOperations","unwrap","catch","err","message","errors","touched","type","name","placeholder","onClick","value","style","verticalAlign","disabled","visible","height","width","ariaLabel","wrapperClass","wrapperStyle","to","FormSection","Container"],"sourceRoot":""}