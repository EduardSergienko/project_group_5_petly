{"version":3,"file":"static/js/945.91ed14c5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/AuthForm/AuthForm.module.scss?60aa","components/AuthForm/FirstStep.jsx","components/AuthForm/SecondStep.jsx","components/AuthForm/AuthForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"orangeColor\":\"#f59256\",\"mainTextColor\":\"#111\",\"backgroundColor\":\"#fdf7f2\",\"prymaryTextColor\":\"#000\",\"activeInputColor\":\"#fdf7f2\",\"errorColor\":\"#d60202\",\"secondaryTextColor\":\"#fff\",\"formWrap\":\"AuthForm_formWrap__i1s5e\",\"title\":\"AuthForm_title__WkPPr\",\"form\":\"AuthForm_form__kV4hH\",\"formGroup\":\"AuthForm_formGroup__FWdnw\",\"input\":\"AuthForm_input__sMieH\",\"icon\":\"AuthForm_icon__Z6Tyz\",\"button\":\"AuthForm_button__B5dfz\",\"textHint\":\"AuthForm_textHint__hVame\",\"link\":\"AuthForm_link__xk1HL\",\"errorMsg\":\"AuthForm_errorMsg__JvpxU\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { FiEyeOff, FiEye } from 'react-icons/fi';\nimport { IconContext } from 'react-icons';\nimport styles from './AuthForm.module.scss';\nimport * as Yup from 'yup';\nimport { useState } from 'react';\n\nconst FirstStep = ({ onNextStep, formData }) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfPassword, setShowConfPassword] = useState(false);\n\n  const validationFirstStepSchema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string()\n      .matches(/^\\S*$/, 'Whitespace is not allowed')\n      .min(7, 'Password is too short')\n      .max(32, 'Password is too long')\n      .required('Required'),\n    confirmPassword: Yup.string().oneOf(\n      [Yup.ref('password'), null],\n      'Passwords must match'\n    ),\n  });\n\n  const handleFormSubmit = values => {\n    onNextStep(values);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={formData}\n        validationSchema={validationFirstStepSchema}\n        onSubmit={handleFormSubmit}\n      >\n        {() => (\n          <Form className={styles.form}>\n            <div className={styles.formGroup}>\n              <Field\n                className={styles.input}\n                name=\"email\"\n                type=\"text\"\n                placeholder=\"Email\"\n              />\n              <ErrorMessage\n                name=\"email\"\n                render={msg => <div className={styles.errorMsg}>{msg}</div>}\n              />\n            </div>\n\n            <div className={styles.formGroup}>\n              <Field\n                className={styles.input}\n                name=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                placeholder=\"Password\"\n              />\n              <span\n                className={styles.icon}\n                onClick={() => setShowPassword(!showPassword)}\n              >\n                {showPassword && (\n                  <IconContext.Provider\n                    value={{ style: { verticalAlign: 'middle' } }}\n                  >\n                    <FiEye />\n                  </IconContext.Provider>\n                )}\n                {!showPassword && (\n                  <IconContext.Provider\n                    value={{ style: { verticalAlign: 'middle' } }}\n                  >\n                    <FiEyeOff />\n                  </IconContext.Provider>\n                )}\n              </span>\n              <ErrorMessage\n                name=\"password\"\n                render={msg => <div className={styles.errorMsg}>{msg}</div>}\n              />\n            </div>\n\n            <div className={styles.formGroup}>\n              <Field\n                className={styles.input}\n                name=\"confirmPassword\"\n                type={showConfPassword ? 'text' : 'password'}\n                placeholder=\"Confirm Password\"\n              />\n              <span\n                className={styles.icon}\n                onClick={() => setShowConfPassword(!showConfPassword)}\n              >\n                {showConfPassword && (\n                  <IconContext.Provider\n                    value={{ style: { verticalAlign: 'middle' } }}\n                  >\n                    <FiEye />\n                  </IconContext.Provider>\n                )}\n                {!showConfPassword && (\n                  <IconContext.Provider\n                    value={{ style: { verticalAlign: 'middle' } }}\n                  >\n                    <FiEyeOff />\n                  </IconContext.Provider>\n                )}\n              </span>\n              <ErrorMessage\n                name=\"confirmPassword\"\n                render={msg => <div className={styles.errorMsg}>{msg}</div>}\n              />\n            </div>\n\n            <button className={styles.button} type={'submit'}>\n              Next\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default FirstStep;\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport styles from './AuthForm.module.scss';\n\nconst SecondStep = ({ onNextStep, onPrevStep, formData }) => {\n  const phoneRegExp = /(?=.*\\+[0-9]{3}\\s?[0-9]{2}\\s?[0-9]{3}\\s?[0-9]{4}$)/;\n\n  const validationSecondStepSchema = Yup.object({\n    name: Yup.string().min(4, 'Name is too short').required('Required'),\n    location: Yup.string().min(4, 'Location is too short').required('Required'),\n    phone: Yup.string()\n      .required('required')\n      .matches(phoneRegExp, 'Phone number is not valid')\n      .min(10, 'too short')\n      .max(14, 'too long'),\n  });\n\n  const handleFormSubmit = values => {\n    onNextStep(values, true);\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={formData}\n        validationSchema={validationSecondStepSchema}\n        onSubmit={handleFormSubmit}\n      >\n        {({ values }) => (\n          <Form className={styles.form}>\n            <div className={styles.formGroup}>\n              <Field\n                className={styles.input}\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n              />\n              <ErrorMessage\n                name=\"name\"\n                render={msg => <div className={styles.errorMsg}>{msg}</div>}\n              />\n            </div>\n\n            <div className={styles.formGroup}>\n              <Field\n                className={styles.input}\n                name=\"location\"\n                type=\"text\"\n                placeholder=\"City, region\"\n              />\n              <ErrorMessage\n                name=\"location\"\n                render={msg => <div className={styles.errorMsg}>{msg}</div>}\n              />\n            </div>\n\n            <div className={styles.formGroup}>\n              <Field\n                className={styles.input}\n                name=\"phone\"\n                type=\"text\"\n                placeholder=\"Mobile phone\"\n              />\n              <ErrorMessage\n                name=\"phone\"\n                render={msg => <div className={styles.errorMsg}>{msg}</div>}\n              />\n            </div>\n\n            <button className={styles.button} type=\"submit\">\n              Register\n            </button>\n\n            <button\n              onClick={() => {\n                onPrevStep(values);\n              }}\n              className={styles.button}\n              type=\"button\"\n            >\n              Back\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default SecondStep;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport FirstStep from './FirstStep';\nimport SecondStep from './SecondStep';\nimport styles from './AuthForm.module.scss';\nimport { authOperations } from 'redux/auth';\n\nconst AuthForm = () => {\n  const dispatch = useDispatch();\n  const [step, setStep] = useState(0);\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n    name: '',\n    location: '',\n    phone: '',\n  });\n\n  const makeDispatchFormData = formData => {\n    dispatch(authOperations.register(formData));\n  };\n\n  const handleNextStep = (newDate, final = false) => {\n    setFormData(prev => ({ ...prev, ...newDate }));\n\n    if (final) {\n      makeDispatchFormData(newDate);\n      return;\n    }\n\n    setStep(prev => prev + 1);\n  };\n\n  const handlePrevStep = newDate => {\n    setFormData(prev => ({ ...prev, ...newDate }));\n    setStep(prev => prev - 1);\n  };\n\n  const PageDisplay = () => {\n    if (step === 0) {\n      return <FirstStep onNextStep={handleNextStep} formData={formData} />;\n    }\n\n    if (step === 1) {\n      return (\n        <SecondStep\n          onNextStep={handleNextStep}\n          onPrevStep={handlePrevStep}\n          formData={formData}\n        />\n      );\n    }\n  };\n\n  return (\n    <div className={styles.formWrap}>\n      <h1 className={styles.title}>Registration</h1>\n      {PageDisplay()}\n\n      <p className={styles.textHint}>\n        Already have an account?&nbsp;\n        <NavLink className={styles.link} to=\"/login\">\n          Login\n        </NavLink>\n      </p>\n    </div>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from 'components/AuthForm/AuthForm';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <AuthForm />\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["onNextStep","formData","useState","showPassword","setShowPassword","showConfPassword","setShowConfPassword","validationFirstStepSchema","Yup","email","required","password","matches","min","max","confirmPassword","oneOf","initialValues","validationSchema","onSubmit","values","className","styles","name","type","placeholder","render","msg","onClick","value","style","verticalAlign","onPrevStep","validationSecondStepSchema","location","phone","dispatch","useDispatch","step","setStep","setFormData","makeDispatchFormData","authOperations","handleNextStep","newDate","final","prev","handlePrevStep","to"],"sourceRoot":""}