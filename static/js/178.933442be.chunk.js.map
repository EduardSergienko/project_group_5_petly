{"version":3,"file":"static/js/178.933442be.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/AdaptiveImage/AdaptiveImage.module.scss?4c19","components/AdaptiveImage/AdaptiveImage.jsx","webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.scss?1c6d","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"AdaptiveImage_image__A6H9t\"};","import styles from './AdaptiveImage.module.scss';\nimport MobileImg320 from 'image/formsPictures/formImg.png';\nimport MobileImg640 from 'image/formsPictures/formImg@2x.png';\nimport MobileImg960 from 'image/formsPictures/formImg@3x.png';\nimport TabletImg768 from 'image/formsPictures/groupMedium.png';\nimport TabletImg1536 from 'image/formsPictures/groupMedium@2x.png';\nimport TabletImg2304 from 'image/formsPictures/groupMedium@3x.png';\nimport DesktopImg1280 from 'image/formsPictures/groupLarge.png';\nimport DesktopImg2560 from 'image/formsPictures/groupLarge@2x.png';\n\nconst mobileWidth = '(max-width: 767px)';\nconst tabletWidth = '(min-width: 768px) and (max-width:1279px)';\nconst desktopWidth = '(min-width: 1280px)';\n\nconst AdaptiveImage = () => {\n  return (\n    <picture className={styles.image}>\n      <source\n        media={mobileWidth}\n        srcSet={`${MobileImg320} 320w, ${MobileImg640} 640w, ${MobileImg960} 960w`}\n        sizes=\"100vw\"\n      />\n      <source\n        media={tabletWidth}\n        srcSet={`${TabletImg768} 768w, ${TabletImg1536} 1536w, ${TabletImg2304} 2304w`}\n        sizes=\"100vw\"\n      />\n      <source\n        media={desktopWidth}\n        srcSet={`${DesktopImg1280} 1280w, ${DesktopImg2560} 2560w`}\n        sizes=\"100vw\"\n      />\n      <img src={`${MobileImg960}`} alt=\"formImage\" />\n    </picture>\n  );\n};\n\nexport default AdaptiveImage;\n","// extracted by mini-css-extract-plugin\nexport default {\"orangeColor\":\"#f59256\",\"mainTextColor\":\"#111\",\"backgroundColor\":\"#fdf7f2\",\"prymaryTextColor\":\"#000\",\"activeInputColor\":\"#fdf7f2\",\"errorColor\":\"#d60202\",\"secondaryTextColor\":\"#fff\",\"formWrap\":\"LoginForm_formWrap__GiixU\",\"title\":\"LoginForm_title__cvnUl\",\"form\":\"LoginForm_form__Kx5pU\",\"formGroup\":\"LoginForm_formGroup__kELnf\",\"input\":\"LoginForm_input__7Ngg7\",\"icon\":\"LoginForm_icon__i+0e7\",\"button\":\"LoginForm_button__ph0FE\",\"textHint\":\"LoginForm_textHint__LJohN\",\"link\":\"LoginForm_link__GY3qv\",\"errorMsg\":\"LoginForm_errorMsg__FEIHU\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport { IconContext } from 'react-icons';\nimport { FiEyeOff, FiEye } from 'react-icons/fi';\nimport { Dna } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\n\nimport { authOperations } from 'redux/auth';\nimport styles from './LoginForm.module.scss';\nimport notices from 'helpers/Notification';\n\nconst LoginForm = ({ title }) => {\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string()\n      .matches(/^\\S*$/, 'Whitespace is not allowed')\n      .min(7, 'Password is too short')\n      .max(32, 'Password is too long')\n      .required('Required'),\n  });\n\n  const handleLogin = formValue => {\n    const { email, password } = formValue;\n    setLoading(true);\n\n    dispatch(authOperations.logIn({ email, password }))\n      .unwrap()\n      .catch(err => {\n        setLoading(false);\n        notices.showError(err?.message);\n      });\n  };\n\n  return (\n    <div className={styles.formWrap}>\n      <h1 className={styles.title}>{title}</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleLogin}\n      >\n        <Form className={styles.form}>\n          <label className={styles.formGroup}>\n            <Field\n              type=\"email\"\n              name=\"email\"\n              className={styles.input}\n              placeholder=\"Email\"\n            />\n            <ErrorMessage\n              name=\"email\"\n              render={msg => <div className={styles.errorMsg}>{msg}</div>}\n            />\n          </label>\n          <label className={styles.formGroup}>\n            <Field\n              type={show ? 'text' : 'password'}\n              name=\"password\"\n              className={styles.input}\n              placeholder=\"Password\"\n            />\n            <span className={styles.icon} onClick={() => setShow(!show)}>\n              {show && (\n                <IconContext.Provider\n                  value={{ style: { verticalAlign: 'middle' } }}\n                >\n                  <FiEye />\n                </IconContext.Provider>\n              )}\n              {!show && (\n                <IconContext.Provider\n                  value={{ style: { verticalAlign: 'middle' } }}\n                >\n                  <FiEyeOff />\n                </IconContext.Provider>\n              )}\n            </span>\n            <ErrorMessage\n              name=\"password\"\n              render={msg => <div className={styles.errorMsg}>{msg}</div>}\n            />\n          </label>\n          <div>\n            <button type=\"submit\" className={styles.button} disabled={loading}>\n              {loading ? (\n                <Dna\n                  visible={true}\n                  height=\"40\"\n                  width=\"80\"\n                  ariaLabel=\"dna-loading\"\n                  wrapperClass=\"dna-wrapper\"\n                  wrapperStyle={{ verticalAlign: 'middle' }}\n                />\n              ) : (\n                'Login'\n              )}\n            </button>\n          </div>\n\n          <p className={styles.textHint}>\n            Don't have an account?&nbsp;\n            <Link className={styles.link} to=\"/register\">\n              Register\n            </Link>\n          </p>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm';\nimport AdaptiveImage from 'components/AdaptiveImage';\n\nconst LoginPage = () => {\n  return (\n    <div>\n      <LoginForm title=\"Login\" />\n      <AdaptiveImage />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["className","styles","media","srcSet","MobileImg320","MobileImg640","MobileImg960","sizes","TabletImg768","TabletImg1536","TabletImg2304","DesktopImg1280","DesktopImg2560","src","alt","title","dispatch","useDispatch","useState","show","setShow","loading","setLoading","validationSchema","Yup","email","required","password","matches","min","max","initialValues","onSubmit","formValue","authOperations","unwrap","catch","err","notices","message","type","name","placeholder","render","msg","onClick","value","style","verticalAlign","disabled","visible","height","width","ariaLabel","wrapperClass","wrapperStyle","to","AdaptiveImage"],"sourceRoot":""}