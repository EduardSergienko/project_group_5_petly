{"version":3,"file":"static/js/782.e810d5cc.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ScrollToTopBtn/ScrollToTopBtn.module.scss?3529","components/ScrollToTopBtn/ScrollToTopBtn.jsx","webpack://react-homework-template/./src/helpers/FilterInput/FilterInput.module.scss?9729","helpers/FilterInput/FilterInput.jsx","helpers/Notification/Notification.jsx","webpack://react-homework-template/./src/components/News/News.module.scss?cf64","components/News/News.jsx","pages/NewsPage.jsx","services/apiServices.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"orangeColor\":\"#f59256\",\"mainTextColor\":\"#111\",\"backgroundColor\":\"#fdf7f2\",\"prymaryTextColor\":\"#000\",\"activeInputColor\":\"#fdf7f2\",\"errorColor\":\"#d60202\",\"secondaryTextColor\":\"#fff\",\"hoverOrangeColor\":\"#e7884d\",\"primaryGrayColor\":\"rgba(17,17,17,.6)\",\"secondGrayColor\":\"#535353\",\"ScrollToTopBtn\":\"ScrollToTopBtn_ScrollToTopBtn__YhYpQ\"};","import styles from './ScrollToTopBtn.module.scss';\n\nexport default function ScrollToTopBtn() {\n  return (\n    <svg\n      className={styles.ScrollToTopBtn}\n      viewBox=\"0 0 512 512\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M256 0C114.6 0 0 114.6 0 256c0 141.4 114.6 256 256 256s256-114.6 256-256C512 114.6 397.4 0 256 0zM390.6 310.6c-12.5 12.5-32.75 12.5-45.25 0L256 221.3L166.6 310.6c-12.5 12.5-32.75 12.5-45.25 0s-12.5-32.75 0-45.25l112-112C239.6 147.1 247.8 144 256 144s16.38 3.125 22.62 9.375l112 112C403.1 277.9 403.1 298.1 390.6 310.6z\" />\n    </svg>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"orangeColor\":\"#f59256\",\"mainTextColor\":\"#111\",\"backgroundColor\":\"#fdf7f2\",\"prymaryTextColor\":\"#000\",\"activeInputColor\":\"#fdf7f2\",\"errorColor\":\"#d60202\",\"secondaryTextColor\":\"#fff\",\"hoverOrangeColor\":\"#e7884d\",\"primaryGrayColor\":\"rgba(17,17,17,.6)\",\"secondGrayColor\":\"#535353\",\"search\":\"FilterInput_search__waR2z\",\"label\":\"FilterInput_label__YJ6od\",\"input\":\"FilterInput_input__SwtDH\",\"noValidate\":\"FilterInput_noValidate__Obbrr\",\"searchIcon\":\"FilterInput_searchIcon__XfCTQ\",\"searchBtn\":\"FilterInput_searchBtn__W1bj3\"};","import { IoMdSearch } from 'react-icons/io';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport styles from './FilterInput.module.scss';\n\nconst FilterInput = ({ onSubmit, onChange, cssClass }) => {\n  const { t } = useTranslation();\n\n  return (\n    <form onSubmit={onSubmit} className={`${styles.search} ${cssClass}`}>\n      <label htmlFor=\"search\" className={styles.label}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          id=\"search\"\n          placeholder={t('news.search')}\n          className={styles.input}\n          onChange={onChange}\n        />\n        <button className={styles.searchBtn} type=\"submit\">\n          <IoMdSearch className={styles.searchIcon} />\n        </button>\n      </label>\n    </form>\n  );\n};\n\nFilterInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  cssClass: PropTypes.string,\n};\n\nexport default FilterInput;\n","import { toast } from 'react-toastify';\n\nconst showError = text => toast.error(text);\n\nconst showSuccess = text => toast.success(text);\n\nconst showWarning = text => toast.warn(text);\n\nconst notices = {\n  showError,\n  showSuccess,\n  showWarning,\n};\nexport default notices;\n","// extracted by mini-css-extract-plugin\nexport default {\"orangeColor\":\"#f59256\",\"mainTextColor\":\"#111\",\"backgroundColor\":\"#fdf7f2\",\"prymaryTextColor\":\"#000\",\"activeInputColor\":\"#fdf7f2\",\"errorColor\":\"#d60202\",\"secondaryTextColor\":\"#fff\",\"hoverOrangeColor\":\"#e7884d\",\"primaryGrayColor\":\"rgba(17,17,17,.6)\",\"secondGrayColor\":\"#535353\",\"newsWrap\":\"News_newsWrap__qHh1+\",\"title\":\"News_title__eqYv-\",\"box\":\"News_box__E9dik\",\"newsItem\":\"News_newsItem__6DvvE\",\"articleName\":\"News_articleName__LYAy-\",\"text\":\"News_text__Ps51B\",\"additional\":\"News_additional__uOFiC\",\"date\":\"News_date__D3o7H\",\"readMore\":\"News_readMore__fNfmn\"};","import { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { useTranslation } from 'react-i18next';\nimport styles from 'components/News/News.module.scss';\n\nimport FilterInput from 'helpers/FilterInput';\nimport notices from 'helpers/Notification';\nimport apiServices from 'services/apiServices';\nimport ScrollToTop from 'react-scroll-to-top';\nimport ScrollToTopBtn from 'components/ScrollToTopBtn/ScrollToTopBtn';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nconst News = () => {\n  const { t } = useTranslation();\n\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [searchingNewsData, setSearchingNewsData] = useState(null);\n\n  useEffect(() => {\n    async function fetchNews() {\n      try {\n        Loading.arrows({\n          svgColor: '#f59256',\n          backgroundColor: 'rgba(0,0,0,0.1)',\n        });\n\n        const { data } = await apiServices.getNews(page);\n\n        setItems(prewState => [...prewState, ...data.data]);\n        if (data.data.length < 9) {\n          setHasMore(false);\n          notices.showSuccess('Thats all News');\n        }\n        Loading.remove();\n      } catch (error) {\n        Loading.remove();\n        return notices.showError('Oops, try again');\n      }\n    }\n\n    fetchNews();\n  }, [page]);\n\n  async function searchNews(e) {\n    e.preventDefault();\n    const { search } = e.target.elements;\n\n    if (search.value.trim() === '') {\n      setSearchingNewsData(null);\n      return;\n    }\n    try {\n      Loading.arrows({\n        svgColor: '#f59256',\n        backgroundColor: 'rgba(0,0,0,0.1)',\n      });\n      const { data: searchData } = await apiServices.searchNews(search.value);\n      setSearchingNewsData(searchData);\n      Loading.remove();\n    } catch (error) {\n      Loading.remove();\n\n      return notices.showError('Sorry, no news found, try again');\n    }\n  }\n\n  const handleInputChange = evt => {\n    if (evt.target.value.trim()) {\n      return;\n    }\n    setSearchingNewsData(null);\n  };\n\n  const shortenText = (text, max) => {\n    return text && text.length > max\n      ? `${text.slice(0, max).split(' ').slice(0, -1).join(' ')}...`\n      : text;\n  };\n  function handleShowMore() {\n    setPage(page + 1);\n  }\n\n  return (\n    <div className={styles.newsWrap}>\n      <h1 className={styles.title}>{t('news.title')}</h1>\n      <FilterInput onSubmit={searchNews} onChange={handleInputChange} />\n      {/* {isLoaded && <Loader />} */}\n      {searchingNewsData ? (\n        <ul className={styles.box}>\n          {searchingNewsData.map(({ _id, title, description, date, url }) => {\n            return (\n              <li key={_id} className={styles.newsItem}>\n                <article>\n                  <h2 className={styles.articleName}>\n                    {shortenText(title, 50)}\n                  </h2>\n                  <p className={styles.text}>{shortenText(description, 225)}</p>\n                  <div className={styles.additional}>\n                    <span className={styles.date}>\n                      {format(new Date(date), 'dd/MM/yyyy')}\n                    </span>\n                    <a\n                      href={url}\n                      className={styles.readMore}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      Read more\n                    </a>\n                  </div>\n                </article>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <InfiniteScroll\n          className={styles.box}\n          dataLength={items.length}\n          next={handleShowMore}\n          hasMore={hasMore}\n          scrollThreshold={1}\n        >\n          {items.map(({ _id, title, description, date, url }) => {\n            return (\n              <li key={_id} className={styles.newsItem}>\n                <article>\n                  <h2 className={styles.articleName}>\n                    {shortenText(title, 50)}\n                  </h2>\n                  <p className={styles.text}>{shortenText(description, 225)}</p>\n                  <div className={styles.additional}>\n                    <span className={styles.date}>\n                      {format(new Date(date), 'dd/MM/yyyy')}\n                    </span>\n                    <a\n                      href={url}\n                      className={styles.readMore}\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      Read more\n                    </a>\n                  </div>\n                </article>\n              </li>\n            );\n          })}\n        </InfiniteScroll>\n      )}\n      <ScrollToTop\n        smooth\n        component={<ScrollToTopBtn />}\n        style={{ boxShadow: 'none' }}\n      />\n    </div>\n  );\n};\n\nexport default News;\n","import News from 'components/News';\nimport Container from 'components/Container/Container';\n\nconst NewsPage = () => {\n  return (\n    <main>\n      <Container>\n        <News />\n      </Container>\n    </main>\n  );\n};\n\nexport default NewsPage;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://fetch-friends.onrender.com/api';\n\nconst getAllFriends = async () => {\n  return await axios.get('/friends');\n};\n\nconst getNews = async page => {\n  return await axios.get(`/news?page=${page}`);\n};\nconst searchNews = async query => {\n  return await axios.get(`/news/search?title=${query}`);\n};\nconst apiServices = {\n  getAllFriends,\n  getNews,\n  searchNews,\n};\nexport default apiServices;\n"],"names":["ScrollToTopBtn","className","styles","viewBox","xmlns","d","onSubmit","onChange","cssClass","t","useTranslation","htmlFor","type","name","id","placeholder","notices","showError","text","toast","showSuccess","showWarning","useState","items","setItems","page","setPage","hasMore","setHasMore","searchingNewsData","setSearchingNewsData","e","preventDefault","search","target","elements","value","trim","Loading","svgColor","backgroundColor","apiServices","searchData","data","useEffect","prewState","length","fetchNews","shortenText","max","slice","split","join","FilterInput","evt","map","_id","title","description","date","url","format","Date","href","rel","dataLength","next","scrollThreshold","smooth","component","style","boxShadow","Container","axios","getAllFriends","getNews","searchNews","query"],"sourceRoot":""}