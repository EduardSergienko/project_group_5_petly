{"version":3,"file":"static/js/20.b3371268.chunk.js","mappings":"8NACA,EAA6T,+CAA7T,EAA2X,sCAA3X,EAA+a,qCAA/a,EAAwe,2CAAxe,EAA2hB,+BAA3hB,EAAukB,oCAAvkB,EAAunB,mCAAvnB,EAAqqB,kCAArqB,EAAktB,kCAAltB,EAA8vB,iCAA9vB,EAA0yB,kCAA1yB,EAAu1B,kCAAv1B,EAAu4B,qCAAv4B,EAA07B,qC,mBCiH17B,EAhHmB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACdC,EAAc,SAAAC,GAClB,MAAqBA,EAAIC,MAAK,SAAAC,GAAI,OAAoB,IAAhBA,EAAKC,MAAT,IAA1BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,GACd,MAAM,GAAN,OAAUD,EAAV,cAAoBC,EACrB,EACD,OACE,+BACE,SAACC,EAAA,EAAD,WACE,qBAASC,UAAWC,EAApB,WACE,eAAID,UAAWC,EAAf,0BACA,gBAAKD,UAAWC,EAAhB,SACGV,EAAKW,KACJ,gBACEC,EADF,EACEA,IACAC,EAFF,EAEEA,IACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,QACAC,EANF,EAMEA,WACAC,EAPF,EAOEA,MACAC,EARF,EAQEA,MACAC,EATF,EASEA,SATF,OAWE,iBAAKX,UAAWC,EAAhB,WACE,cAAGW,KAAMR,EAAKS,OAAO,QAArB,UACE,eAAIb,UAAWC,EAAf,SAAoCK,OAGtC,iBAAKN,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACED,UAAWC,EACXa,IAAKT,EACLU,IAAG,UAAKT,EAAL,aAIP,gBAAKN,UAAWC,EAAhB,UACE,2BACE,gBAAID,UAAWC,EAAf,0BACc,kBACXU,GACC,uBAAInB,EAAYmB,MAEhB,4CAEDA,IACC,eAAIX,UAAWC,EAAf,SACGU,EAAST,KAAI,gBAAGc,EAAH,EAAGA,IAAKnB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,GAAImB,EAAlB,EAAkBA,GAAlB,OACZ,gBAEEjB,UAAWC,EAFb,WAIE,uBAAIe,KACJ,yBACGnB,EADH,IACUC,OALLmB,EAAGC,WAFE,UAcpB,gBAAIlB,UAAWC,EAAf,uBACW,kBACRM,GACC,cAAGK,KAAMJ,EAAYR,UAAWC,EAAhC,UACE,0BAAOM,OAGT,6CAGJ,gBAAIP,UAAWC,EAAf,qBACS,kBACNQ,GACC,cACET,UAAWC,EACXW,KAAI,iBAAYH,GAFlB,SAIGA,KAGH,6CAGJ,gBAAIT,UAAWC,EAAf,oBAEE,kBACCS,GACC,cACEV,UAAWC,EACXW,KAAI,cAASF,GAFf,SAIGA,KAGH,sDAzEuCP,EAXrD,YAkGb,E,oBC7FD,EAfuB,WACrB,OAAsBgB,EAAAA,EAAAA,UAAS,IAA/B,eAAO1B,EAAP,KAAY2B,EAAZ,KAWA,OATAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+GAE2BC,EAAAA,EAAAA,gBAF3B,gBAEY/B,EAFZ,EAEYA,KACR6B,EAAO7B,EAAKA,MAHhB,0GADc,uBAAC,WAAD,wBAOdgC,EACD,GAAE,KACI,SAAC,EAAD,CAAYhC,KAAME,GAC1B,C,kEChBD+B,EAAAA,GAAAA,SAAAA,QAAyB,yCAEzB,IAAMC,EAAa,mCAAG,8FACPD,EAAAA,GAAAA,IAAU,YADH,mFAAH,qDAIbE,EAAO,mCAAG,8FACDF,EAAAA,GAAAA,IAAU,SADT,mFAAH,qDAIPF,EAAc,CAClBG,cAAAA,EACAC,QAAAA,GAEF,K","sources":["webpack://react-homework-template/./src/components/OurFriendsCards/OurFriendsCards.module.scss?f455","components/OurFriendsCards/OurFriendsCards.jsx","pages/OurFriendsPage.jsx","services/apiServices.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"orangeColor\":\"#f59256\",\"mainTextColor\":\"#111\",\"backgroundColor\":\"#fdf7f2\",\"prymaryTextColor\":\"#000\",\"activeInputColor\":\"#fdf7f2\",\"errorColor\":\"#d60202\",\"secondaryTextColor\":\"#fff\",\"hoverOrangeColor\":\"#e7884d\",\"primaryGrayColor\":\"rgba(17,17,17,.6)\",\"secondGrayColor\":\"#535353\",\"ContainerFriendsCards\":\"OurFriendsCards_ContainerFriendsCards__wdXJ0\",\"FriendsThumb\":\"OurFriendsCards_FriendsThumb__hYoRp\",\"NameFriends\":\"OurFriendsCards_NameFriends__VE1SP\",\"ourFriendsSection\":\"OurFriendsCards_ourFriendsSection__8chD9\",\"Title\":\"OurFriendsCards_Title__x7uvG\",\"CardsThumb\":\"OurFriendsCards_CardsThumb__4iBWn\",\"MainThumb\":\"OurFriendsCards_MainThumb__YLFsU\",\"SecThumb\":\"OurFriendsCards_SecThumb__9SVTm\",\"CardItem\":\"OurFriendsCards_CardItem__ZjWCV\",\"subMenu\":\"OurFriendsCards_subMenu__QRxuG\",\"CardsImg\":\"OurFriendsCards_CardsImg__9AqsA\",\"CardLink\":\"OurFriendsCards_CardLink__g5FhW\",\"CardAddress\":\"OurFriendsCards_CardAddress__O9rY-\",\"subMenuItem\":\"OurFriendsCards_subMenuItem__E-IKh\"};","import styles from './OurFriendsCards.module.scss';\nimport Container from 'components/Container/Container';\nconst OurFriends = ({ data }) => {\n  const getWorkDays = arr => {\n    const { from, to } = arr.find(item => item.isOpen === true);\n    return `${from} : ${to}`;\n  };\n  return (\n    <>\n      <Container>\n        <section className={styles.ourFriendsSection}>\n          <h2 className={styles.Title}>Our friends</h2>\n          <div className={styles.FriendsThumb}>\n            {data.map(\n              ({\n                _id,\n                url,\n                imageUrl,\n                title,\n                address,\n                addressUrl,\n                email,\n                phone,\n                workDays,\n              }) => (\n                <div className={styles.ContainerFriendsCards} key={_id}>\n                  <a href={url} target=\"blank\">\n                    <h3 className={styles.NameFriends}>{title}</h3>\n                  </a>\n\n                  <div className={styles.CardsThumb}>\n                    <div className={styles.MainThumb}>\n                      <img\n                        className={styles.CardsImg}\n                        src={imageUrl}\n                        alt={`${title} img`}\n                      />\n                    </div>\n\n                    <div className={styles.SecThumb}>\n                      <ul>\n                        <li className={styles.CardItem}>\n                          Work Hours: <br />\n                          {workDays ? (\n                            <p>{getWorkDays(workDays)}</p>\n                          ) : (\n                            <span>-------------</span>\n                          )}\n                          {workDays && (\n                            <ul className={styles.subMenu}>\n                              {workDays.map(({ day, from, to, id }) => (\n                                <li\n                                  key={id.toString()}\n                                  className={styles.subMenuItem}\n                                >\n                                  <p>{day}</p>\n                                  <p>\n                                    {from}-{to}\n                                  </p>\n                                </li>\n                              ))}\n                            </ul>\n                          )}\n                        </li>\n                        <li className={styles.CardItem}>\n                          Address: <br />\n                          {address ? (\n                            <a href={addressUrl} className={styles.CardAddress}>\n                              <span>{address}</span>\n                            </a>\n                          ) : (\n                            <span>----------</span>\n                          )}\n                        </li>\n                        <li className={styles.CardItem}>\n                          Email: <br />\n                          {email ? (\n                            <a\n                              className={styles.CardLink}\n                              href={`mailto:${email}`}\n                            >\n                              {email}\n                            </a>\n                          ) : (\n                            <span>----------</span>\n                          )}\n                        </li>\n                        <li className={styles.CardItem}>\n                          Phone:\n                          <br />\n                          {phone ? (\n                            <a\n                              className={styles.CardLink}\n                              href={`tel:${phone}`}\n                            >\n                              {phone}\n                            </a>\n                          ) : (\n                            <span>----------</span>\n                          )}\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              )\n            )}\n          </div>\n        </section>\n      </Container>\n    </>\n  );\n};\n\nexport default OurFriends;\n","import OurFriends from 'components/OurFriendsCards/OurFriendsCards';\nimport apiServices from 'services/apiServices';\nimport { useEffect, useState } from 'react';\n\nconst OurFriendsPage = () => {\n  const [arr, setArr] = useState([]);\n\n  useEffect(() => {\n    async function showFriends() {\n      try {\n        const { data } = await apiServices.getAllFriends();\n        setArr(data.data);\n      } catch (error) {}\n    }\n    showFriends();\n  }, []);\n  return <OurFriends data={arr} />;\n};\n\nexport default OurFriendsPage;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://fetch-friend.herokuapp.com/api';\n\nconst getAllFriends = async () => {\n  return await axios.get('/friends');\n};\n\nconst getNews = async () => {\n  return await axios.get('/news');\n};\n\nconst apiServices = {\n  getAllFriends,\n  getNews,\n};\nexport default apiServices;\n"],"names":["data","getWorkDays","arr","find","item","isOpen","from","to","Container","className","styles","map","_id","url","imageUrl","title","address","addressUrl","email","phone","workDays","href","target","src","alt","day","id","toString","useState","setArr","useEffect","apiServices","showFriends","axios","getAllFriends","getNews"],"sourceRoot":""}